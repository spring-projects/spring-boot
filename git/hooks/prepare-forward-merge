#!/usr/bin/env ruby

require 'json'
require 'net/http'
require 'yaml'
require 'open3'

class ForwardMerge
  attr_reader :issue

  def initialize(issue)
    @issue = issue
  end

  def execute
    stdout, stderr, status = Open3.capture3('git', 'rev-parse', '--abbrev-ref', 'HEAD')
    branch = stdout.strip
    if branch == 'main' || branch == 'master'
      puts "Attempting forward merge from #{branch}"
      stdout, stderr, status = Open3.capture3('git', 'log', '--format=format:%H', "#{branch}..origin/#{branch}")
      commits = stdout.split("\n")
      commits.each do |commit|
        stdout, stderr, status = Open3.capture3('git', 'log', '-1', '--format=%B', commit)
        message = stdout.strip
        if message.match(/^Merge pull request #(\d+)/)
          pr_number = $1
          check_milestone(pr_number)
        end
      end
    end
  end

  private

  def check_milestone(pr_number)
    uri = URI("https://api.github.com/repos/spring-projects/spring-boot/issues/#{pr_number}")
    http = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = true
    request = Net::HTTP::Get.new(uri.request_uri)
    request['Accept'] = 'application/vnd.github.v3+json'
    request['Authorization'] = "token #{ENV['GITHUB_TOKEN']}" if ENV['GITHUB_TOKEN']
    
    response = http.request(request)
    if response.code == '200'
      pr_data = JSON.parse(response.body)
      if pr_data['milestone'].nil?
        puts "WARNING: Pull request ##{pr_number} does not have a milestone set"
        exit 1
      end
    else
      puts "Failed to fetch PR data: #{response.code}"
    end
  end
end

if __FILE__ == $0
  forward_merge = ForwardMerge.new(ARGV[0])
  forward_merge.execute
end
