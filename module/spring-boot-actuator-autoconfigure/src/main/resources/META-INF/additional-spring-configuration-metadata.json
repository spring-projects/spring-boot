{
  "groups": [],
  "properties": [
    {
      "name": "info",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "description": "Arbitrary properties to add to the info endpoint."
    },
    {
      "name": "management.auditevents.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable storage of audit events.",
      "defaultValue": true
    },
    {
      "name": "management.cloudfoundry.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable extended Cloud Foundry actuator endpoints.",
      "defaultValue": true
    },
    {
      "name": "management.cloudfoundry.skip-ssl-validation",
      "type": "java.lang.Boolean",
      "description": "Whether to skip SSL verification for Cloud Foundry actuator endpoint security calls.",
      "defaultValue": false
    },
    {
      "name": "management.endpoint.health.probes.add-additional-paths",
      "type": "java.lang.Boolean",
      "description": "Whether to make the liveness and readiness health groups available on the main server port.",
      "defaultValue": false
    },
    {
      "name": "management.endpoint.health.probes.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable liveness and readiness probes.",
      "defaultValue": false
    },
    {
      "name": "management.endpoint.health.status.order",
      "defaultValue": [
        "DOWN",
        "OUT_OF_SERVICE",
        "UP",
        "UNKNOWN"
      ]
    },
    {
      "name": "management.endpoint.health.validate-group-membership",
      "type": "java.lang.Boolean",
      "description": "Whether to validate health group membership on startup. Validation fails if a group includes or excludes a health contributor that does not exist.",
      "defaultValue": true
    },
    {
      "name": "management.endpoints.access.default",
      "type": "org.springframework.boot.actuate.endpoint.Access",
      "description": "Default access level for all endpoints."
    },
    {
      "name": "management.endpoints.access.max-permitted",
      "description": "Maximum level of endpoint access that is permitted. Caps an endpoint's individual access level (management.endpoint.<id>.access) and the default access (management.endpoints.access.default).'",
      "defaultValue": "unrestricted"
    },
    {
      "name": "management.endpoints.enabled-by-default",
      "type": "java.lang.Boolean",
      "description": "Whether to enable or disable all endpoints by default.",
      "deprecation": {
        "replacement": "management.endpoints.access.default",
        "since": "3.4.0"
      }
    },
    {
      "name": "management.endpoints.jackson.isolated-object-mapper",
      "type": "java.lang.Boolean",
      "description": "Whether to use an isolated object mapper to serialize endpoint JSON.",
      "defaultValue": true
    },
    {
      "name": "management.endpoints.jmx.domain",
      "defaultValue": "org.springframework.boot"
    },
    {
      "name": "management.endpoints.jmx.exposure.include",
      "defaultValue": "health"
    },
    {
      "name": "management.endpoints.jmx.unique-names",
      "type": "java.lang.Boolean",
      "description": "Whether unique runtime object names should be ensured.",
      "deprecation": {
        "replacement": "spring.jmx.unique-names",
        "level": "error"
      }
    },
    {
      "name": "management.endpoints.web.exposure.include",
      "defaultValue": [
        "health"
      ]
    },
    {
      "name": "management.health.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable default health indicators.",
      "defaultValue": true
    },
    {
      "name": "management.health.diskspace.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable disk space health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.influxdb.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "reason": "InfluxDB support has been removed."
      }
    },
    {
      "name": "management.health.livenessstate.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable liveness state health check.",
      "defaultValue": false
    },
    {
      "name": "management.health.ping.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable ping health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.probes.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable liveness and readiness probes.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "management.endpoint.health.probes.enabled"
      }
    },
    {
      "name": "management.health.readinessstate.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable readiness state health check.",
      "defaultValue": false
    },
    {
      "name": "management.health.ssl.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable SSL certificate health check.",
      "defaultValue": true
    },
    {
      "name": "management.httpexchanges.recording.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable HTTP request-response exchange recording.",
      "defaultValue": true
    },
    {
      "name": "management.httpexchanges.recording.include",
      "defaultValue": [
        "request-headers",
        "response-headers",
        "errors"
      ]
    },
    {
      "name": "management.info.build.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable build info.",
      "defaultValue": true
    },
    {
      "name": "management.info.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable default info contributors.",
      "defaultValue": true
    },
    {
      "name": "management.info.env.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable environment info.",
      "defaultValue": false
    },
    {
      "name": "management.info.git.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable git info.",
      "defaultValue": true
    },
    {
      "name": "management.info.java.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Java info.",
      "defaultValue": false
    },
    {
      "name": "management.info.os.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Operating System info.",
      "defaultValue": false
    },
    {
      "name": "management.info.process.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable process info.",
      "defaultValue": false
    },
    {
      "name": "management.info.ssl.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable SSL certificate info.",
      "defaultValue": false
    },
    {
      "name": "management.server.add-application-context-header",
      "type": "java.lang.Boolean",
      "description": "Add the \"X-Application-Context\" HTTP header in each response.",
      "defaultValue": false
    },
    {
      "name": "management.server.servlet.context-path",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "management.server.base-path",
        "level": "error"
      }
    },
    {
      "name": "management.trace.http.enabled",
      "deprecation": {
        "replacement": "management.httpexchanges.recording.enabled",
        "level": "error"
      }
    },
    {
      "name": "management.trace.http.include",
      "deprecation": {
        "replacement": "management.httpexchanges.recording.include",
        "level": "error"
      }
    },
    {
      "name": "management.trace.include",
      "deprecation": {
        "replacement": "management.httpexchanges.recording.include",
        "level": "error"
      }
    },
    {
      "name": "management.wavefront.api-token",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.api-token-type",
      "type": "org.springframework.boot.actuate.autoconfigure.wavefront.WavefrontProperties$TokenType",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.application.cluster-name",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.application.custom-tags",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.application.name",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.application.service-name",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.application.shard-name",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.batch-size",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.connect-timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.global-prefix",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.read-timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.report-day-distribution",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.report-hour-distribution",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.report-minute-distribution",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.metrics.export.step",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.sender.batch-size",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.sender.flush-interval",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.sender.max-queue-size",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.sender.message-size",
      "type": "org.springframework.util.unit.DataSize",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.source",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.trace-derived-custom-tag-keys",
      "type": "java.util.Set<java.lang.String>",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.tracing.export.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    },
    {
      "name": "management.wavefront.uri",
      "type": "java.net.URI",
      "deprecation": {
        "level": "error",
        "reason": "Wavefront is end-of-life."
      }
    }
  ],
  "hints": [
    {
      "name": "management.endpoints.web.cors.allowed-headers",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "management.endpoints.web.cors.allowed-methods",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "management.endpoints.web.cors.allowed-origins",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "management.health.status.order",
      "values": [
        {
          "value": "UNKNOWN"
        },
        {
          "value": "UP"
        },
        {
          "value": "DOWN"
        },
        {
          "value": "OUT_OF_SERVICE"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    }
  ]
}
