/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Elasticsearch"

dependencies {
	api(project(":core:spring-boot"))
	api("co.elastic.clients:elasticsearch-java")

	optional(project(":core:spring-boot-autoconfigure"))
	optional(project(":core:spring-boot-docker-compose"))
	optional(project(":core:spring-boot-testcontainers"))
	optional(project(":module:spring-boot-health"))
	optional(project(":module:spring-boot-jsonb"))
	optional(project(":module:spring-boot-reactor"))

	optional("com.fasterxml.jackson.core:jackson-databind")
	optional("jakarta.json.bind:jakarta.json.bind-api")
	optional("org.springframework.data:spring-data-elasticsearch") {
		exclude group: "org.elasticsearch.client", module: "transport"
	}
	optional("org.testcontainers:elasticsearch")

	dockerTestImplementation(project(":core:spring-boot-test"))
	dockerTestImplementation(project(":module:spring-boot-jackson"))
	dockerTestImplementation(project(":test-support:spring-boot-docker-test-support"))
	dockerTestImplementation(testFixtures(project(":core:spring-boot-docker-compose")))
	dockerTestImplementation("org.testcontainers:elasticsearch")
	dockerTestImplementation("org.testcontainers:junit-jupiter")

	testImplementation(project(":core:spring-boot-test"))
	testImplementation(project(":test-support:spring-boot-test-support"))
	testImplementation(project(":module:spring-boot-jackson"))
	testImplementation(project(":module:spring-boot-jsonb"))
	testImplementation("org.springframework:spring-web")

	testRuntimeOnly("ch.qos.logback:logback-classic")
}

tasks.named("compileTestJava") {
	options.nullability.checking = "tests"
}

tasks.named("compileDockerTestJava") {
	options.nullability.checking = "tests"
}
