/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.integration-test"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Developer Tools"

configurations {
	intTestDependencies {
		extendsFrom dependencyManagement
	}
	propertyDefaults
}

artifacts {
	propertyDefaults(file("build/resources/main/org/springframework/boot/devtools/env/devtools-property-defaults.properties")) {
		builtBy(processResources)
	}
}

dependencies {
	api(project(":core:spring-boot"))
	api(project(":core:spring-boot-autoconfigure"))

	intTestDependencies(project(":core:spring-boot-autoconfigure"))
	intTestDependencies(project(":module:spring-boot-http-converter"))
	intTestDependencies(project(":module:spring-boot-tomcat"))
	intTestDependencies(project(":module:spring-boot-jackson"))
	intTestDependencies(project(":module:spring-boot-webmvc"))
	intTestDependencies("ch.qos.logback:logback-classic")
	intTestDependencies("jakarta.annotation:jakarta.annotation-api")
	intTestDependencies("org.apache.logging.log4j:log4j-to-slf4j")
	intTestDependencies("org.slf4j:jul-to-slf4j")

	intTestImplementation(project(":core:spring-boot-autoconfigure"))
	intTestImplementation(project(":core:spring-boot-test"))
	intTestImplementation(project(":module:spring-boot-restclient"))
	intTestImplementation(project(":module:spring-boot-resttestclient"))
	intTestImplementation(project(":test-support:spring-boot-test-support"))
	intTestImplementation("org.apache.httpcomponents.client5:httpclient5")
	intTestImplementation("net.bytebuddy:byte-buddy")


	intTestRuntimeOnly("org.springframework:spring-web")

	optional(project(":module:spring-boot-jdbc"))
	optional(project(":module:spring-boot-jpa"))
	optional(project(":module:spring-boot-r2dbc"))
	optional(project(":module:spring-boot-reactor"))
	optional(project(":module:spring-boot-security"))
	optional(project(":module:spring-boot-web-server"))
	optional("io.r2dbc:r2dbc-spi")
	optional("jakarta.servlet:jakarta.servlet-api")
	optional("org.apache.derby:derbytools")
	optional("org.hibernate.orm:hibernate-core")
	optional("org.springframework:spring-jdbc")
	optional("org.springframework:spring-orm")
	optional("org.springframework:spring-web")
	optional("org.springframework.security:spring-security-config")
	optional("org.springframework.security:spring-security-web")
	optional("org.springframework.data:spring-data-redis")
	optional("org.springframework.session:spring-session-core")

	testImplementation(project(":core:spring-boot-test"))
	testImplementation(project(":module:spring-boot-freemarker"))
	testImplementation(project(":module:spring-boot-tomcat"))
	testImplementation(project(":test-support:spring-boot-test-support"))
	testImplementation(testFixtures(project(":module:spring-boot-r2dbc")))
	testImplementation("ch.qos.logback:logback-classic")
	testImplementation("com.h2database:h2")
	testImplementation("com.zaxxer:HikariCP")
	testImplementation("org.apache.derby:derby")
	testImplementation("org.apache.derby:derbyclient")
	testImplementation("org.apache.tomcat.embed:tomcat-embed-websocket")
	testImplementation("org.apache.tomcat.embed:tomcat-embed-core")
	testImplementation("org.apache.tomcat.embed:tomcat-embed-jasper")
	testImplementation("org.eclipse.jetty.ee11.websocket:jetty-ee11-websocket-jakarta-client")
	testImplementation("org.hsqldb:hsqldb")
	testImplementation("org.postgresql:postgresql")
	testImplementation("org.springframework:spring-webmvc")
	testImplementation("org.springframework:spring-websocket")
	testImplementation("org.springframework.hateoas:spring-hateoas")
	testImplementation("org.springframework.security:spring-security-test")

	testRuntimeOnly("org.aspectj:aspectjweaver")
	testRuntimeOnly("org.yaml:snakeyaml")
	testRuntimeOnly("io.r2dbc:r2dbc-h2")
}

tasks.register("syncIntTestDependencies", Sync) {
	destinationDir = file(layout.buildDirectory.dir("dependencies"))
	from {
		configurations.intTestDependencies
	}
	from jar
}

intTest {
	dependsOn syncIntTestDependencies
}

tasks.named("compileTestJava") {
	options.nullability.checking = "tests"
}

tasks.named("compileIntTestJava") {
	options.nullability.checking = "tests"
}

