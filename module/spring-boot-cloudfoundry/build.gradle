/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Cloud Foundry"

dependencies {
	api(project(":core:spring-boot"))
	api(project(":module:spring-boot-actuator"))
	api(project(":module:spring-boot-actuator-autoconfigure"))

	implementation(project(":module:spring-boot-security"))

	optional(project(":module:spring-boot-health"))
	optional(project(":module:spring-boot-restclient"))
	optional(project(":module:spring-boot-webclient"))
	optional(project(":module:spring-boot-webflux"))
	optional(project(":module:spring-boot-webmvc"))
	optional("io.projectreactor:reactor-core")
	optional("io.projectreactor.netty:reactor-netty-http")
	optional("jakarta.servlet:jakarta.servlet-api")

	testImplementation(project(":core:spring-boot-test"))
	testImplementation(project(":module:spring-boot-http-converter"))
	testImplementation(project(":module:spring-boot-jackson"))
	testImplementation(project(":module:spring-boot-reactor-netty"))
	testImplementation(project(":module:spring-boot-restclient-test"))
	testImplementation(project(":module:spring-boot-tomcat"))
	testImplementation(project(":test-support:spring-boot-test-support"))
	testImplementation("com.squareup.okhttp3:mockwebserver")
	testImplementation("io.projectreactor:reactor-test")
	testImplementation("org.springframework.security:spring-security-test")

	testCompileOnly("com.google.code.findbugs:jsr305")

	testRuntimeOnly("ch.qos.logback:logback-classic")
}

tasks.named("compileTestJava") {
	options.nullability.checking = "tests"
}
