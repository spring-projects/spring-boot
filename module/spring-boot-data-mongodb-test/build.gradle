/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java-library"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.optional-dependencies"
	id "org.springframework.boot.test-slice"
}

description = "Spring Boot Data MongoDB Test"

dependencies {
	api(project(":core:spring-boot-test-autoconfigure"))
	api(project(":module:spring-boot-data-mongodb"))

	optional(project(":core:spring-boot-testcontainers"))
	optional("org.junit.jupiter:junit-jupiter-api")

	dockerTestImplementation(project(":core:spring-boot-testcontainers"))
	dockerTestImplementation(project(":module:spring-boot-data-mongodb"))
	dockerTestImplementation(project(":test-support:spring-boot-docker-test-support"))
	dockerTestImplementation(testFixtures(project(":core:spring-boot-autoconfigure")))
	dockerTestImplementation("io.projectreactor:reactor-core")
	dockerTestImplementation("org.assertj:assertj-core")
	dockerTestImplementation("org.junit.jupiter:junit-jupiter")
	dockerTestImplementation("org.mongodb:mongodb-driver-reactivestreams")
	dockerTestImplementation("org.mongodb:mongodb-driver-sync")
	dockerTestImplementation("org.testcontainers:testcontainers-junit-jupiter")
	dockerTestImplementation("org.testcontainers:testcontainers-mongodb")
	dockerTestImplementation("org.testcontainers:testcontainers")

	dockerTestCompileOnly("com.google.code.findbugs:jsr305")

	testImplementation(project(":test-support:spring-boot-test-support"))

	testRuntimeOnly("ch.qos.logback:logback-classic")
}

tasks.named("compileTestJava") {
	options.nullability.checking = "tests"
}

tasks.named("compileDockerTestJava") {
	options.nullability.checking = "tests"
}
