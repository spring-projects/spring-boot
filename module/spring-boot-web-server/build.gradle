/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java-library"
	id "java-test-fixtures"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Web Server"

dependencies {
	api(project(":core:spring-boot"))
	api("org.springframework:spring-web")

	optional(project(":core:spring-boot-autoconfigure"))
	optional(project(":core:spring-boot-test"))
	optional("io.projectreactor:reactor-core")
	optional("jakarta.servlet:jakarta.servlet-api")
	optional("org.springframework:spring-test")

	testFixturesCompileOnly(project(":core:spring-boot-test"))
	testFixturesCompileOnly(project(":test-support:spring-boot-test-support"))
	testFixturesCompileOnly("io.projectreactor:reactor-test")
	testFixturesCompileOnly("io.projectreactor.netty:reactor-netty-http")
	testFixturesCompileOnly("org.apache.httpcomponents.client5:httpclient5")
	testFixturesCompileOnly("org.apache.tomcat.embed:tomcat-embed-jasper")
	testFixturesCompileOnly("org.eclipse.jetty.http2:jetty-http2-client")
	testFixturesCompileOnly("org.eclipse.jetty.http2:jetty-http2-client-transport")
	testFixturesCompileOnly("jakarta.servlet:jakarta.servlet-api")
	testFixturesCompileOnly("jakarta.websocket:jakarta.websocket-api")
	testFixturesCompileOnly("jakarta.websocket:jakarta.websocket-client-api")
	testFixturesCompileOnly("org.mockito:mockito-core")
	testFixturesCompileOnly("org.springframework:spring-tx")
	testFixturesCompileOnly("org.springframework:spring-webflux")
	testFixturesCompileOnly("org.springframework:spring-webmvc")

	testImplementation(project(":core:spring-boot-test"))
	testImplementation(project(":test-support:spring-boot-test-support"))
	testImplementation(testFixtures(project(":core:spring-boot")))
	testImplementation("org.apache.tomcat.embed:tomcat-embed-core")
	testImplementation("org.springframework:spring-webmvc")

	testRuntimeOnly("ch.qos.logback:logback-classic")
}
