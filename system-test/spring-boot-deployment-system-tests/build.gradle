/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "war"
	id "org.springframework.boot.system-test"
}

description = "Spring Boot Deployment Tests"

configurations {
	providedRuntime {
		extendsFrom dependencyManagement
	}
}

configurations.all {
	exclude module: "spring-boot-starter-logging"
}

dependencies {
	compileOnly("jakarta.servlet:jakarta.servlet-api")

	implementation(project(":starter:spring-boot-starter-webmvc")) {
		exclude group: "org.hibernate.validator"
		exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
	}
	implementation(project(":starter:spring-boot-starter-actuator"))

	systemTestImplementation(enforcedPlatform(project(path: ":platform:spring-boot-internal-dependencies")))
	systemTestImplementation(project(":module:spring-boot-resttestclient"))
	systemTestImplementation(project(":starter:spring-boot-starter-test"))
	systemTestImplementation(project(":test-support:spring-boot-test-support"))
	systemTestImplementation("org.apache.httpcomponents.client5:httpclient5")
	systemTestImplementation("org.slf4j:slf4j-simple")
	systemTestImplementation("org.springframework:spring-web")
	systemTestImplementation("org.testcontainers:testcontainers-junit-jupiter")
	systemTestImplementation("org.testcontainers:testcontainers")
}

systemTest {
	inputs.files(war).withNormalizer(ClasspathNormalizer).withPropertyName("war")
}

war {
	archiveVersion = ''
}

tasks.named("compileTestJava") {
	options.nullability.checking = "tests"
}

tasks.named("compileSystemTestJava") {
	options.nullability.checking = "tests"
}
