/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'java-gradle-plugin'
	id "org.springframework.boot.system-test"
}

description = "Spring Boot Image Building Tests"

configurations {
	app
	providedRuntime {
		extendsFrom dependencyManagement
	}
}

tasks.register("syncMavenRepository", Sync) {
	from configurations.app
	into layout.buildDirectory.dir("system-test-maven-repository")
}

systemTest {
	dependsOn syncMavenRepository
	if (project.hasProperty("springBootVersion")) {
		systemProperty "springBootVersion", project.properties["springBootVersion"]
	} else {
		systemProperty "springBootVersion", project.getVersion()
	}
}

dependencies {
	app project(path: ":build-plugin:spring-boot-gradle-plugin", configuration: "mavenRepository")
	app project(path: ":starter:spring-boot-starter-web", configuration: "mavenRepository")

	implementation(project(":starter:spring-boot-starter-webmvc")) {
		exclude group: "org.hibernate.validator"
	}

	systemTestImplementation(project(":buildpack:spring-boot-buildpack-platform"))
	systemTestImplementation(project(":starter:spring-boot-starter-test"))
	systemTestImplementation(project(":test-support:spring-boot-gradle-test-support"))
	systemTestImplementation(gradleTestKit())
	systemTestImplementation("org.assertj:assertj-core")
	systemTestImplementation("org.testcontainers:junit-jupiter")
	systemTestImplementation("org.testcontainers:testcontainers")
}

toolchain {
	maximumCompatibleJavaVersion = JavaLanguageVersion.of(23)
}
