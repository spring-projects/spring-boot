/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Integration"

dependencies {
	api(project(":spring-boot-project:spring-boot"))
	api("org.springframework.integration:spring-integration-core")

	implementation(project(":spring-boot-project:spring-boot-jdbc"))

	optional(project(":spring-boot-project:spring-boot-actuator-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-metrics"))
	optional(project(":spring-boot-project:spring-boot-rsocket"))
	optional("org.springframework.integration:spring-integration-jdbc")
	optional("org.springframework.integration:spring-integration-jmx")
	optional("org.springframework.integration:spring-integration-rsocket")

	testImplementation(project(":spring-boot-project:spring-boot-flyway"))
	testImplementation(project(":spring-boot-project:spring-boot-rsocket"))
	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-jersey")))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-webflux")))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-webmvc")))
	testImplementation("org.springframework:spring-web")

	testRuntimeOnly(project(":spring-boot-project:spring-boot-reactor-netty"))
	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("com.h2database:h2")
	testRuntimeOnly("com.zaxxer:HikariCP")
}
