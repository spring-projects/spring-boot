/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java"
	id "org.springframework.boot.antora-contributor"
}

description = "Spring Boot Actuator Docs"

dependencies {
	testImplementation(project(":core:spring-boot-test"))
	testImplementation(project(":module:spring-boot-actuator-autoconfigure"))
	testImplementation(project(":module:spring-boot-cache"))
	testImplementation(project(":module:spring-boot-flyway"))
	testImplementation(project(":module:spring-boot-health"))
	testImplementation(project(":module:spring-boot-http-converter"))
	testImplementation(project(":module:spring-boot-integration"))
	testImplementation(project(":module:spring-boot-jackson"))
	testImplementation(project(":module:spring-boot-jdbc"))
	testImplementation(project(":module:spring-boot-liquibase"))
	testImplementation(project(":module:spring-boot-micrometer-metrics"))
	testImplementation(project(":module:spring-boot-quartz"))
	testImplementation(project(":module:spring-boot-reactor-netty"))
	testImplementation(project(":module:spring-boot-session"))
	testImplementation(project(":module:spring-boot-tomcat"))
	testImplementation(project(":module:spring-boot-webflux"))
	testImplementation(project(":module:spring-boot-webmvc"))
	testImplementation(project(":test-support:spring-boot-test-support"))
	testImplementation("io.micrometer:micrometer-core")
	testImplementation("io.micrometer:micrometer-registry-prometheus")
	testImplementation("io.prometheus:prometheus-metrics-exposition-formats")
	testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc")
	testImplementation("org.springframework.restdocs:spring-restdocs-webtestclient")

	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("com.h2database:h2")
}

tasks.named("test") {
	outputs.dir(layout.buildDirectory.dir("generated-snippets"))
}

tasks.named("generateAntoraPlaybook") {
	antoraExtensions.xref.stubs = ["appendix:.*", "api:.*", "reference:.*"]
}

antoraContributions {
	'actuator-rest-api' {
		aggregateContent {
			from(tasks.named('test').map { layout.buildDirectory.dir("generated-snippets") }) {
				into "modules/api/partials/rest/actuator"
			}
		}
		localAggregateContent {
			from(tasks.named("generateAntoraYml")) {
				into "modules"
			}
		}
		source()
	}
}
